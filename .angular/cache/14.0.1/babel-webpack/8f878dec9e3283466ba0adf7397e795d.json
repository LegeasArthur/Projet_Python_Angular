{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\n\nfunction SearchPokemonComponent_a_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 9);\n    i0.ɵɵlistener(\"click\", function SearchPokemonComponent_a_8_Template_a_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const pokemon_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.goToDetail(pokemon_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const pokemon_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", pokemon_r2.name, \" \");\n  }\n}\n\nexport class SearchPokemonComponent {\n  constructor(router) {\n    this.router = router; // Subject appartient à RxJS cette classe permet de sauvgarder les recherches de l'utilisateurs (flux de donner dans le temps).\n    // Cette classe se comporte comme un observable mais on peut le piloter (on peut construire ce flux de données.).\n    // {a...ab...etc}\n\n    this.seaechTerms = new Subject();\n  }\n\n  ngOnInit() {} // Permet de pousser dans le template en temps réel la saisie de l'utilisateur\n\n\n  search(term) {\n    this.seaechTerms.next(term);\n  }\n\n  goToDetail(pokemon) {\n    const link = ['/pokemon', pokemon.id];\n    this.router.navigate(link);\n  }\n\n}\n\nSearchPokemonComponent.ɵfac = function SearchPokemonComponent_Factory(t) {\n  return new (t || SearchPokemonComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\n\nSearchPokemonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchPokemonComponent,\n  selectors: [[\"app-search-pokemon\"]],\n  decls: 10,\n  vars: 3,\n  consts: [[1, \"row\"], [1, \"col\", \"s12\", \"m6\", \"offset-3\"], [1, \"card\"], [1, \"card-content\"], [1, \"input-field\"], [\"placeholder\", \"Rechercher un pok\\u00E9mon\", 3, \"keyup\"], [\"searchBox\", \"\"], [1, \"collection\"], [\"class\", \"collection-item\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"collection-item\", 3, \"click\"]],\n  template: function SearchPokemonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"input\", 5, 6);\n      i0.ɵɵlistener(\"keyup\", function SearchPokemonComponent_Template_input_keyup_5_listener() {\n        i0.ɵɵrestoreView(_r5);\n\n        const _r0 = i0.ɵɵreference(6);\n\n        return i0.ɵɵresetView(ctx.search(_r0.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 7);\n      i0.ɵɵtemplate(8, SearchPokemonComponent_a_8_Template, 2, 1, \"a\", 8);\n      i0.ɵɵpipe(9, \"async\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(9, 1, ctx.pokemons$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,OAArB,QAAoC,MAApC;;;;;;;;;ICYwBC;IACIA;MAAA;MAAA;MAAA;MAAA,OAASA,6CAAT;IAA4B,CAA5B;IAEAA;IACJA;;;;;IADIA;IAAAA;;;;ADP5B,OAAM,MAAOC,sBAAP,CAA6B;EAQjCC,YAAoBC,MAApB,EAAkC;IAAd,qBAAc,CAPlC;IACA;IACA;;IACA,mBAAc,IAAIJ,OAAJ,EAAd;EAIuC;;EAEvCK,QAAQ,IACP,CAXgC,CAajC;;;EACAC,MAAM,CAACC,IAAD,EAAa;IACjB,KAAKC,WAAL,CAAiBC,IAAjB,CAAsBF,IAAtB;EACD;;EAEDG,UAAU,CAACC,OAAD,EAAiB;IACzB,MAAMC,IAAI,GAAG,CAAC,UAAD,EAAaD,OAAO,CAACE,EAArB,CAAb;IACA,KAAKT,MAAL,CAAYU,QAAZ,CAAqBF,IAArB;EACD;;AArBgC;;;mBAAtBV,wBAAsBD;AAAA;;;QAAtBC;EAAsBa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;;MCVnClB,+BAAiB,CAAjB,EAAiB,KAAjB,EAAiB,CAAjB,EAAiB,CAAjB,EAAiB,KAAjB,EAAiB,CAAjB,EAAiB,CAAjB,EAAiB,KAAjB,EAAiB,CAAjB,EAAiB,CAAjB,EAAiB,KAAjB,EAAiB,CAAjB,EAAiB,CAAjB,EAAiB,OAAjB,EAAiB,CAAjB,EAAiB,CAAjB;MAQoBA;QAAAA;;QAAA;;QAAA,OAASA,qCAAT;MAAgC,CAAhC;MADAA;MAIAA;MAGIA;;MAKJA;;;;MAL2BA;MAAAA","names":["Subject","i0","SearchPokemonComponent","constructor","router","ngOnInit","search","term","seaechTerms","next","goToDetail","pokemon","link","id","navigate","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/arthurlegeas/Documents/GitHub/Projet_Python_Angular/src/app/pokemon/search-pokemon/search-pokemon.component.ts","/Users/arthurlegeas/Documents/GitHub/Projet_Python_Angular/src/app/pokemon/search-pokemon/search-pokemon.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { Pokemon } from '../pokemon';\n\n@Component({\n  selector: 'app-search-pokemon',\n  templateUrl: './search-pokemon.component.html',\n\n})\nexport class SearchPokemonComponent implements OnInit {\n  // Subject appartient à RxJS cette classe permet de sauvgarder les recherches de l'utilisateurs (flux de donner dans le temps).\n  // Cette classe se comporte comme un observable mais on peut le piloter (on peut construire ce flux de données.).\n  // {a...ab...etc}\n  seaechTerms = new Subject<string>();\n  // A partir des données de Subject on veut construire une liste de pokemon)\n  pokemons$: Observable<Pokemon[]>;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  // Permet de pousser dans le template en temps réel la saisie de l'utilisateur\n  search(term: string){\n    this.seaechTerms.next(term)\n  }\n\n  goToDetail(pokemon: Pokemon){\n    const link = ['/pokemon', pokemon.id];\n    this.router.navigate(link);\n  }\n}\n","<div class=\"row\">\n    <div class=\"col s12 m6 offset-3\">\n        <div class=\"card\">\n            <div class=\"card-content\">\n                <div class=\"input-field\">\n                    <!-- #searchBox est une variable référencée dans le template.\n                        Elle permet de transmettre le contenue de l'input à la fonction search en temps réel. -->\n                    <input #searchBox\n                    (keyup)=\"search(searchBox.value)\" \n                    placeholder=\"Rechercher un pokémon\"\n                    />\n                    <div class=\"collection\">\n                        <!-- le $ à pokemons$ est une convention, on ajout un $ car c'est un observable. \n                        On ajoute le pipe async pour éviter de faire .subscribe dans le component-->\n                        <a *ngFor=\"let pokemon of pokemons$ | async\"\n                            (click)=\"goToDetail(pokemon)\"\n                            class=\"collection-item\">\n                            {{pokemon.name}}\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module"}